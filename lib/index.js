// Generated by CoffeeScript 1.9.1
(function() {
  var Client, flyd, somata,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    slice = [].slice;

  somata = require('somata');

  flyd = require('flyd');

  Client = (function(superClass) {
    extend(Client, superClass);

    function Client() {
      return Client.__super__.constructor.apply(this, arguments);
    }

    Client.prototype.subscribe = function() {
      var args, s$, service_name, type;
      service_name = arguments[0], type = arguments[1], args = 3 <= arguments.length ? slice.call(arguments, 2) : [];
      s$ = flyd.stream();
      Client.__super__.subscribe.apply(this, [service_name, type].concat(slice.call(args), [function(err, event) {
        return s$(event);
      }]));
      return s$;
    };

    return Client;

  })(somata.Client);

  module.exports = {
    Client: Client
  };

}).call(this);
